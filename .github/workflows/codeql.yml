# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "create-new-codeql-issues-5059" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "create-new-codeql-issues-5059" ]
  schedule:
    - cron: '30 5 * * 5'

jobs:
  analyze:
    name: Analyze
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby', 'swift' ]
        # Use only 'java' to analyze code written in Java, Kotlin or both
        # Use only 'javascript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-and-quality
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality


    # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #     echo "Run, Build Application using script"
    #     ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # Install @actions/core
    - name: Install @actions/core
      run: npm install @actions/core

    # Fetch Alerts
    - name: Fetch Alerts
      id: fetch-alerts
      uses: actions/github-script@v7
      env:
        H4LA_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        script: |
          const script = require('./github-actions/trigger-issue/create-codeql-issues/fetch-alerts.js');
          const fetchAlerts = script({ g: github, c: context, token: process.env.H4LA_TOKEN });

    # Check Existing Issues
    - name: Check Existing Issues
      uses: actions/github-script@v7
      id: check-existing-issues
      env:
        H4LA_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        script: |
          const script = require('./github-actions/trigger-issue/create-codeql-issues/check-existing-issues.js');
          const alerts = ${{ steps.fetch-alerts.outputs.alerts }};
          const checkIssues = script({ g: github, c: context, token: process.env.H4LA_TOKEN, alerts });

    # Create New Issues
    - name: Create New Issues
      uses: actions/github-script@v7
      env:
        H4LA_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        script: |
          const script = require('./github-actions/trigger-issue/create-codeql-issues/create-new-issues.js');
          const alertId = ${{ steps.check-existing-issues.outputs.alertId }};
          const newIssues = script({ g: github, c: context, token: process.env.H4LA_TOKEN, alertId });

